name: Windows - RDP with ngrok (Fully Self-Contained)

on:
  workflow_dispatch:

jobs:
  build:
    name: Start Building...
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
      - name: Setup RDP, Tunnel, and Keep-Alive
        shell: powershell
        run: |
          # Part 1: Create keep-alive script (time.py) and install dependencies
          Write-Host "[1] Creating keep-alive script and installing dependencies..."
          $pythonScript = @"
          import psutil
          import subprocess
          import time

          threshold_percentage = 30
          excluded_processes = ['devenv.exe', 'HopToDesk.exe', 'msedge.exe']

          while True:
              for process in psutil.process_iter(['pid', 'name', 'cpu_percent']):
                  process_name = process.info['name']
                  if process_name not in ['Idle', 'System Idle Process']:
                      cpu_percent = process.info['cpu_percent']
                      if cpu_percent > threshold_percentage and process_name not in excluded_processes:
                          print(f"High CPU Usage detected: {process_name} ({cpu_percent}%)")
                          try:
                              subprocess.run(['taskkill', '/F', '/IM', process_name], check=True, capture_output=True, text=True)
                              print(f"Terminated process: {process_name}")
                          except subprocess.CalledProcessError as e:
                              print(f"Failed to terminate {process_name}: {e.stderr}")
              time.sleep(10)
          "@
          Set-Content -Path "time.py" -Value $pythonScript
          pip install psutil --quiet

          # Part 2: Configure System for RDP
          Write-Host "[2] Configuring System for RDP..."
          $password = "@#Disala123456"
          Set-LocalUser -Name "runneradmin" -Password ($password | ConvertTo-SecureString -AsPlainText -Force)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -value 0
          New-NetFirewallRule -DisplayName "Allow RDP" -Direction Inbound -Protocol TCP -LocalPort 3389 -Action Allow

          # Part 3: Setup ngrok
          Write-Host "[3] Setting up ngrok tunnel..."
          Invoke-WebRequest 'https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip' -OutFile ngrok.zip
          Expand-Archive ngrok.zip
          # IMPORTANT: Make sure your NGROK_AUTHTOKEN secret is correct
          ./ngrok/ngrok.exe config add-authtoken "${{ secrets.NGROK_AUTHTOKEN }}"
          Start-Process -FilePath "./ngrok/ngrok.exe" -ArgumentList "tcp", "3389" -NoNewWindow
          Start-Sleep -Seconds 15

          # Part 4: Retrieve and Display Credentials
          Write-Host "[4] Retrieving and displaying credentials..."
          $tunnel = (Invoke-RestMethod -Uri 'http://127.0.0.1:4040/api/tunnels').tunnels[0]
          $rdpAddress = $tunnel.public_url.Replace("tcp://", "")
          Write-Host "###############################################" -ForegroundColor Green
          Write-Host "## RDP Connection Details (USE NGROK)" -ForegroundColor Green
          Write-Host "###############################################" -ForegroundColor Green
          Write-Host ""
          Write-Host "   RDP Address: $rdpAddress"
          Write-Host "   Username:    runneradmin"
          Write-Host "   Password:    @#Disala123456"
          Write-Host ""
          Write-Host "   Example: 0.tcp.ngrok.io:12345"
          Write-Host "###############################################" -ForegroundColor Green

          # Part 5: Keep Alive
          Write-Host "[5] Starting keep-alive script. The job will now hang intentionally to keep the session open."
          python.exe time.py
